// SPDX-License-Identifier: CC0-1.0
// Made by GreaseMonkey, 2022. (Well, OK, this file was partially generated by zig init-exe.)

const std = @import("std");

const exes = [_]struct {
    exe: []const u8,
    main: []const u8,
}{
    .{ .exe = "ramlog", .main = "src/ramlog.zig" },
};

pub fn build(b: *std.build.Builder) void {
    // Standard target options allows the person running `zig build` to choose
    // what target to build for. Here we do not override the defaults, which
    // means any target is allowed, and the default is native. Other options
    // for restricting supported target set are available.
    const target = b.standardTargetOptions(.{});

    // Standard release options allow the person running `zig build` to select
    // between Debug, ReleaseSafe, ReleaseFast, and ReleaseSmall.
    const mode = b.standardReleaseOptions();

    // ramlog
    inline for (exes) |t| {
        const exe = b.addExecutable(t.exe, t.main);
        exe.setTarget(target);
        exe.setBuildMode(mode);
        exe.single_threaded = true;
        if (mode != .Debug) {
            exe.strip = true;
        }
        exe.install();

        const run_cmd = exe.run();
        run_cmd.step.dependOn(b.getInstallStep());
        if (b.args) |args| {
            run_cmd.addArgs(args);
        }

        const run_step = b.step("run-" ++ t.exe, "Run " ++ t.exe);
        run_step.dependOn(&run_cmd.step);
    }
}
